---
import Icon from '@components/Icon.astro';

interface Position {
  title: string;
  startDate: string;
  endDate: string;
  description: string;
  bulletPoints: string[];
  techStack: string[];
  locations: string[];
  employmentType: 'Full-time' | 'Part-time' | 'Internship' | 'Contract' | 'Freelance';
  workMode: 'On-site' | 'Remote' | 'Hybrid';
}

interface Employment {
  company: string;
  website?: string;
  headquarters: string;
  startDate: string;
  endDate: string;
  positions: Position[];
}

const calculateTenure = (startDate: string, endDate: string): string => {
  const start = new Date(startDate);
  const end = endDate === 'Present' ? new Date() : new Date(endDate);

  let years = end.getFullYear() - start.getFullYear();
  let months = end.getMonth() - start.getMonth();

  if (months < 0) {
    years--;
    months += 12;
  }

  const yearText = years > 0 ? `${years} yr${years > 1 ? 's' : ''}` : '';
  const monthText = months > 0 ? `${months} mo${months > 1 ? 's' : ''}` : '';

  if (years > 0 && months > 0) {
    return `${yearText} ${monthText}`;
  } else if (years > 0) {
    return yearText;
  } else {
    return monthText || '1 mo';
  }
};

const formatDateRange = (startDate: string, endDate: string): string => {
  const start = new Date(startDate);
  const startFormatted = start.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
  });

  if (endDate === 'Present') {
    return `${startFormatted} - Present`;
  }

  const end = new Date(endDate);
  const endFormatted = end.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
  });

  return `${startFormatted} - ${endFormatted}`;
};

const employments: Employment[] = [
  {
    company: 'HyScaler',
    website: 'https://hyscaler.com',
    headquarters: 'Bhubaneswar, Odisha',
    startDate: '2023-08-01',
    endDate: 'Present',
    positions: [
      {
        title: 'SDE-1',
        startDate: '2024-08-01',
        endDate: 'Present',
        employmentType: 'Full-time',
        workMode: 'On-site',
        description:
          'Leading backend development initiatives and implementing scalable solutions for high-traffic applications.',
        bulletPoints: [
          'Architected and developed RESTful APIs serving 100K+ daily requests with 99.9% uptime',
          'Optimized database queries reducing response time by 45% and improving user experience',
          'Implemented microservices architecture using Node.js and Docker for better scalability',
          'Collaborated with cross-functional teams to deliver features ahead of sprint deadlines',
        ],
        techStack: ['Node.js', 'TypeScript', 'MongoDB', 'Docker', 'AWS', 'Redis'],
        locations: ['Bhubaneswar, Odisha, India'],
      },
      {
        title: 'Junior Software Developer',
        startDate: '2023-08-01',
        endDate: '2024-07-31',
        employmentType: 'Full-time',
        workMode: 'On-site',
        description:
          'Developed full-stack applications and gained expertise in modern web technologies.',
        bulletPoints: [
          'Built responsive web applications using React and Node.js for various client projects',
          'Implemented automated testing suites achieving 85% code coverage',
          'Participated in code reviews and maintained coding standards across the team',
          'Debugged and resolved production issues, improving application stability by 30%',
        ],
        techStack: ['React', 'Node.js', 'PostgreSQL', 'Git', 'JavaScript'],
        locations: ['Bhubaneswar, Odisha, India'],
      },
    ],
  },
  {
    company: 'Infophy (Formerly Webysis)',
    headquarters: 'Bhubaneswar, Odisha',
    startDate: '2023-09-01',
    endDate: '2024-01-31',
    positions: [
      {
        title: 'Frontend Web Developer',
        startDate: '2023-11-01',
        endDate: '2024-01-31',
        employmentType: 'Full-time',
        workMode: 'On-site',
        description:
          'Focused on creating intuitive user interfaces and optimizing frontend performance.',
        bulletPoints: [
          'Developed pixel-perfect responsive designs using React and modern CSS frameworks',
          'Collaborated with UX/UI designers to implement interactive user experiences',
          'Optimized application performance resulting in 40% faster load times',
          'Integrated RESTful APIs and managed state using Redux for complex applications',
        ],
        techStack: ['React', 'JavaScript', 'CSS3', 'HTML5', 'Redux'],
        locations: ['Bhubaneswar, Odisha, India'],
      },
      {
        title: 'Frontend Developer Intern',
        startDate: '2023-09-01',
        endDate: '2023-10-31',
        employmentType: 'Internship',
        workMode: 'On-site',
        description:
          'Gained hands-on experience in frontend development while working on real client projects.',
        bulletPoints: [
          'Created responsive UI components for an e-commerce platform using React',
          'Implemented form validations and user authentication flows',
          'Learned version control with Git and collaborated using GitHub',
          'Participated in daily standups and agile development processes',
        ],
        techStack: ['React', 'JavaScript', 'CSS3', 'HTML5', 'Git'],
        locations: ['Bhubaneswar, Odisha, India'],
      },
    ],
  },
];
---

<section class='employment-section'>
  <div class='section-divider'>
    <div class='section-divider-icon'>â—†</div>
  </div>
  <h2 class='section-title'>Experience</h2>
  <p class='section-description'>
    Here's my professional path, built through experiences and continuous learning.
  </p>
  <div class='employment-timeline'>
    {
      employments.map((employment, empIndex) => {
        const totalTenure = calculateTenure(employment.startDate, employment.endDate);
        const hasMultiplePositions = employment.positions.length > 1;

        return (
          <div class='employment-item'>
            <div class='employment-content'>
              {/* Company Header */}
              <div class='company-header'>
                <div class='company-info'>
                  <div class='company-name-container'>
                    {employment.website ? (
                      <a
                        href={employment.website}
                        target='_blank'
                        rel='noopener noreferrer'
                        class='company-link-wrapper'
                      >
                        <h3 class='company-name'>{employment.company}</h3>
                        <span class='company-link'>
                          <Icon icon='arrowLink' size='1.5rem' />
                        </span>
                      </a>
                    ) : (
                      <h3 class='company-name'>{employment.company}</h3>
                    )}
                  </div>
                  <div class='company-meta'>
                    <span class='company-location'>{employment.headquarters}</span>
                    <span class='company-date-duration'>
                      <span class='company-duration-date'>
                        {formatDateRange(employment.startDate, employment.endDate)}
                      </span>
                      <span class='company-meta-sep'>|</span>
                      <span class='company-duration'>{totalTenure}</span>
                    </span>
                  </div>
                </div>
              </div>

              {/* Positions */}
              <div class='positions-container'>
                {employment.positions.map((position, posIndex) => (
                  <div class='position-item'>
                    {hasMultiplePositions && (
                      <div class='position-connector'>
                        <div class='position-dot' />
                        {posIndex !== employment.positions.length - 1 && (
                          <div class='position-line' />
                        )}
                      </div>
                    )}

                    <div class={`position-content ${hasMultiplePositions ? 'with-connector' : ''}`}>
                      <div class='position-header'>
                        <h4 class='position-title'>{position.title}</h4>
                        <div class='position-type'>{position.employmentType}</div>
                        <div class='position-meta'>
                          <div class='position-location-workmode'>
                            <span class='position-location'>{position.locations[0]}</span>
                            <span class='position-meta-sep'>|</span>
                            <span class='position-work-mode'>{position.workMode}</span>
                          </div>
                          <div class='position-date-duration'>
                            <span class='position-duration-date'>
                              {formatDateRange(position.startDate, position.endDate)}
                            </span>
                            <span class='position-meta-sep'>|</span>
                            <span class='position-duration'>
                              {calculateTenure(position.startDate, position.endDate)}
                            </span>
                          </div>
                        </div>
                      </div>

                      <div class='position-details'>
                        <p class='position-description'>{position.description}</p>

                        {position.bulletPoints.length > 0 && (
                          <ul class='bullet-points'>
                            {position.bulletPoints.map((point, idx) => (
                              <li>{point}</li>
                            ))}
                          </ul>
                        )}

                        {position.techStack.length > 0 && (
                          <div class='tech-stack'>
                            <span class='tech-label'>Skills:</span>
                            <div class='tech-tags'>
                              {position.techStack.map((tech, idx) => (
                                <span class='tech-tag'>{tech}</span>
                              ))}
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
      })
    }
  </div>
  <div class='section-divider'>
    <div class='section-divider-icon'>â—†</div>
  </div>
</section>

<style>
  .employment-section {
    padding: 2rem 0;
    width: 100%;
  }

  .section-description {
    @apply text-base;
    color: var(--gray-300);
    line-height: 1.6;
    margin-bottom: 2rem;
    text-align: left;
  }

  .companies-wrapper {
    background: rgba(255, 255, 255, 0.02);
    border: 1px solid var(--gray-800);
    border-radius: 1rem;
    padding: 2rem;
  }

  @media (max-width: 768px) {
    .companies-wrapper {
      padding: 1.5rem;
    }
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--gray-0);
    margin-bottom: 2rem;
  }

  @media (min-width: 768px) {
    .section-title {
      font-size: 1.75rem;
    }
  }

  .employment-timeline {
    position: relative;
  }

  .employment-item {
    margin-bottom: 2rem;
    width: 100%;
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  .employment-item:last-child {
    margin-bottom: 0;
  }

  .company-bullet {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    margin-top: 0.125rem;
  }

  .diamond-bullet {
    color: var(--accent-regular);
    font-size: 1.2rem;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .employment-content {
    flex: 1;
    min-width: 0;
    padding: 0;
  }

  .company-header {
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--gray-800);
  }

  .company-name-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
  }

  .company-name {
    font-size: 1.25rem;
    font-weight: 600;
    color: inherit;
    margin: 0;
  }

  .company-link-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    color: var(--accent-regular);
    transition: color 0.3s ease;
  }

  .company-link-wrapper:hover {
    color: var(--accent-dark);
  }

  .company-link-wrapper:hover .company-link {
    transform: scale(1.1);
  }

  .company-link {
    display: flex;
    align-items: center;
    transition: transform 0.3s ease;
    color: inherit;
  }

  .company-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.25rem;
    color: var(--gray-400);
    @apply text-base;
  }

  .company-date-duration {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .company-meta-sep {
    color: var(--gray-500);
  }

  .company-duration-date {
    color: var(--gray-400);
  }

  .company-duration {
    font-style: italic;
    color: var(--gray-400);
    white-space: nowrap;
  }

  .company-location {
    color: var(--gray-400);
  }

  @media (max-width: 768px) {
    .company-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0;
    }

    .company-date-duration {
      order: -1;
      margin-bottom: 0.25rem;
    }
  }

  .positions-container {
    position: relative;
  }

  .position-item {
    display: flex;
    margin-bottom: 1.5rem;
    position: relative;
  }

  .position-item:last-child {
    margin-bottom: 0;
  }

  .position-connector {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-right: 1rem;
    flex-shrink: 0;
    width: 20px;
    position: relative;
  }

  .position-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--accent-regular);
    z-index: 1;
    margin-top: 0.5rem;
  }

  .position-line {
    width: 1px;
    flex-grow: 1;
    background: var(--gray-700);
    margin: 0.5rem 0;
  }

  .position-content {
    flex: 1;
  }

  .position-content.with-connector {
    padding-left: 0.75rem;
  }

  .position-header {
    margin-bottom: 1rem;
  }

  .position-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--gray-100);
    margin: 0 0 0.5rem 0;
  }

  .position-type {
    font-weight: 500;
    color: var(--gray-300);
    margin-bottom: 0.5rem;
    display: block;
  }

  .position-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 0.25rem;
    color: var(--gray-400);
    @apply text-base;
  }

  .position-location-workmode {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .position-date-duration {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .position-meta-sep {
    color: var(--gray-500);
  }

  .position-location {
    color: var(--gray-400);
  }

  .position-work-mode {
    color: var(--gray-400);
  }

  .position-duration-date {
    color: var(--gray-400);
  }

  .position-duration {
    font-style: italic;
    color: var(--gray-400);
    white-space: nowrap;
  }

  /* Mobile responsive adjustments */
  @media (max-width: 768px) {
    .position-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0;
    }

    .position-date-duration {
      order: -1;
      margin-bottom: 0.25rem;
    }
  }

  .position-description {
    @apply text-base;
    color: var(--gray-300);
    margin: 0 0 1rem 0;
    line-height: 1.6;
  }

  .bullet-points {
    margin: 0 0 1.5rem 0;
    padding-left: 1rem;
    list-style: none;
  }

  .bullet-points li {
    color: var(--gray-300);
    margin-bottom: 0.5rem;
    line-height: 1.5;
    position: relative;
    @apply text-base;
  }

  .bullet-points li::before {
    content: 'â€¢';
    color: var(--accent-regular);
    position: absolute;
    left: -1rem;
  }

  .tech-stack {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  @media (min-width: 768px) {
    .tech-stack {
      flex-direction: row;
      align-items: flex-start;
      gap: 1rem;
    }
  }

  .tech-label {
    color: var(--gray-400);
    font-size: 0.875rem;
    font-weight: 500;
    flex-shrink: 0;
  }

  .tech-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
  }

  .tech-tag {
    font-size: 0.75rem;
    padding: 0.2rem 0.6rem;
    border-radius: 0.75rem;
    background: rgba(102, 126, 234, 0.1);
    color: var(--accent-regular);
    font-weight: 500;
    border: 1px solid rgba(102, 126, 234, 0.2);
  }

  /* Mobile responsive adjustments */
  @media (max-width: 768px) {
    .employment-section {
      padding: 1rem 0;
    }

    .employment-item {
      gap: 0.75rem;
    }

    .company-bullet {
      width: 20px;
      height: 20px;
      margin-top: 0.25rem;
    }

    .diamond-bullet {
      font-size: 1rem;
    }

    .company-name {
      font-size: 1.125rem;
    }

    .position-title {
      font-size: 1rem;
    }

    .position-connector {
      margin-right: 0.75rem;
    }

    .tech-stack {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style>
