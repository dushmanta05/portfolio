---
interface Props {
  href: string;
  disabled?: boolean;
  id?: string;
}

const { href, disabled = false, id } = Astro.props;
---

<a href={href} class:list={[{ disabled }]} data-disabled={disabled} id={id}>
  <slot />
</a>

<style>
  a {
    @apply relative flex items-center justify-center text-center px-6 py-3 md:px-8 md:py-4 gap-2 md:gap-3 no-underline rounded-xl overflow-hidden whitespace-nowrap;
    color: var(--accent-text-over);
    line-height: 1.1;
    background: var(--gradient-accent-cta);
    font-size: var(--text-base);
    transition: all 0.2s ease;
    cursor: pointer;
  }

  a.disabled {
    opacity: 0.6;
    pointer-events: none;
    cursor: not-allowed;
  }

  @media (min-width: 768px) {
    a {
      font-size: var(--text-md);
    }
  }

  a::after {
    @apply absolute inset-0 pointer-events-none;
    content: '';
    transition: background-color var(--theme-transition);
    mix-blend-mode: overlay;
  }

  a:not(.disabled):focus::after,
  a:not(.disabled):hover::after {
    background-color: hsla(var(--gray-999-basis), 0.3);
  }

  a:not(.disabled):active {
    transform: translateY(1px);
  }
</style>
