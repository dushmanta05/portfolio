---
import MainHead from '@components/MainHead.astro';
import Nav from '@components/Nav.astro';
import Footer from '@components/Footer.astro';
import MoveToTop from '@components/common/MoveToTop.astro';

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  seoTitle?: string | undefined;
  seoDescription?: string | undefined;
  image?: string | undefined;
  ogImage?: string | undefined;
  publishDate?: string | undefined;
  articleType?: 'website' | 'article';
}

const {
  seoTitle,
  seoDescription,
  title: rawTitle = 'Dushmanta | Full-Stack Developer Portfolio',
  description: rawDescription,
  image = 'https://dushmanta.dev/og-image.png',
  ogImage,
  publishDate,
  articleType = 'website',
} = Astro.props;

const homepageDescription =
  'Full-Stack Developer specializing in backend development. Building efficient digital solutions with Node.js, MongoDB, and modern web technologies.';

const isHomePage = Astro.url.pathname === '/';

const title = seoTitle || rawTitle;
const description = isHomePage ? homepageDescription : seoDescription || rawDescription;

const finalImage = new URL(ogImage || image, 'https://dushmanta.dev').href;
const canonicalURL = new URL(Astro.url.pathname, 'https://dushmanta.dev');
---

<html lang='en' data-pinterest-rich='true'>
  <head>
    <meta charset='utf-8' />
    <meta name='viewport' content='width=device-width' />
    <meta name='theme-color' content='#0751cf' />

    <!-- Canonical URL -->
    <link rel='canonical' href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name='title' content={title} />
    <meta name='description' content={description} />

    <!-- Open Graph / Meta -->
    <meta property='og:site_name' content=`Dushmanta's Portfolio` />
    <meta property='og:type' content={articleType} />
    <meta property='og:url' content={canonicalURL} />
    <meta property='og:title' content={title} />
    <meta property='og:description' content={description} />
    <meta property='og:image' content={finalImage} />
    <meta property='og:image:alt' content='Dushmanta Portfolio Preview' />
    <meta property='og:locale' content='en_US' />

    <!-- Article specific meta tags -->
    {articleType === 'article' && (
      <>
        <meta property='article:author' content='Dushmanta' />
        <meta property='article:published_time' content={publishDate || new Date().toISOString()} />
        <meta property='article:section' content='Technology' />
        <meta property='article:tag' content='Web Development' />
      </>
    )}

    <!-- Twitter -->
    <meta name='twitter:card' content='summary_large_image' />
    <meta name='twitter:creator' content='@dushmanta05' />
    <meta name='twitter:site' content='@dushmanta05' />
    <meta name='twitter:url' content={canonicalURL} />
    <meta name='twitter:title' content={title} />
    <meta name='twitter:description' content={description} />
    <meta name='twitter:image' content={finalImage} />
    <meta name='twitter:image:alt' content='Dushmanta Portfolio Preview' />

    <!-- Discord -->
    <meta property='og:image:width' content='1200' />
    <meta property='og:image:height' content='630' />

    <!-- Pinterest -->
    <meta name='application-name' content='Dushmanta Portfolio' />

    <!-- Apple Touch Icon -->
    <link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
    <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
    <link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />

    <MainHead title={title} description={description} />
  </head>
  <body>
    <div class='stack backgrounds'>
      <Nav />
      <slot />
      <div class='wrapper gap-12 lg:gap-16'>
        <Footer />
      </div>
    </div>

    <!-- Move to Top Component -->
    <MoveToTop />

    <script>
      addEventListener('load', () => document.documentElement.classList.add('loaded'));
    </script>

    <!-- JSON-LD Structured Data for better SEO -->
    <script is:inline type='application/ld+json' set:html={
      JSON.stringify(
        articleType === 'article' ? {
          "@context": "https://schema.org",
          "@type": "Article",
          "headline": title,
          "description": description,
          "image": {
            "@type": "ImageObject",
            "url": finalImage,
            "width": 1200,
            "height": 630
          },
          "author": {
            "@type": "Person",
            "name": "Dushmanta",
            "url": "https://dushmanta.dev"
          },
          "publisher": {
            "@type": "Organization",
            "name": "Dushmanta Portfolio",
            "logo": {
              "@type": "ImageObject",
              "url": "https://dushmanta.dev/og-image.png"
            }
          },
          "datePublished": publishDate || new Date().toISOString(),
          "dateModified": publishDate || new Date().toISOString(),
          "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": canonicalURL
          }
        } : {
          "@context": "https://schema.org",
          "@type": "WebSite",
          "name": "Dushmanta Portfolio",
          "url": "https://dushmanta.dev",
          "description": description,
          "author": {
            "@type": "Person",
            "name": "Dushmanta",
            "jobTitle": "Full-Stack Developer",
            "url": "https://dushmanta.dev"
          },
          "image": {
            "@type": "ImageObject",
            "url": finalImage,
            "width": 1200,
            "height": 630
          }
        }
      )
    }>
    </script>

    <style>
      :root {
        --_placeholder-bg: linear-gradient(transparent, transparent);
        --bg-image-subtle-1: var(--_placeholder-bg);
        --bg-image-subtle-2: var(--_placeholder-bg);
        --bg-image-footer: var(--_placeholder-bg);
        --bg-svg-blend-mode: overlay;
        --bg-blend-mode: darken;
        --bg-image-aspect-ratio: 2.25;
        --bg-scale: 1.68;
        --bg-aspect-ratio: calc(var(--bg-image-aspect-ratio) / var(--bg-scale));
        --bg-gradient-size: calc(var(--bg-scale) * 100%);
      }

      :root.theme-dark {
        --bg-svg-blend-mode: darken;
        --bg-blend-mode: lighten;
      }

      .backgrounds {
        min-height: 100%;
        isolation: isolate;
        background:
					/*noise*/
          /*footer*/
          var(--bg-image-footer) bottom center/var(--bg-gradient-size) no-repeat,
          /*header1*/ var(--bg-image-main-curves) top center/var(--bg-gradient-size) no-repeat,
          /*header2*/ var(--bg-image-main) top center/var(--bg-gradient-size) no-repeat,
          /*base*/ var(--gray-999);
        background-blend-mode: /*noise*/
          overlay,
          /*footer*/ var(--bg-blend-mode),
          /*header1*/ var(--bg-svg-blend-mode),
          /*header2*/ normal,
          /*base*/ normal;
      }

      .wrapper {
        max-width: 80rem;
        margin: 0 auto;
        padding: 0 1rem;
      }
      @media (forced-colors: active) {
        /* Deactivate custom backgrounds for high contrast users. */
        .backgrounds {
          background: none;
          background-blend-mode: none;
          --bg-gradient-size: none;
        }
      }

      @media (min-width: 768px) {
        .wrapper {
          padding: 0 2rem;
        }
      }
    </style>
  </body>
</html>
